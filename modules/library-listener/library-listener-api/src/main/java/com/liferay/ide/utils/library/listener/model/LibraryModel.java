/**
 * Copyright (c) 2000-present Liferay, Inc. All rights reserved.
 *
 * This library is free software; you can redistribute it and/or modify it under
 * the terms of the GNU Lesser General Public License as published by the Free
 * Software Foundation; either version 2.1 of the License, or (at your option)
 * any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT
 * ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
 * FOR A PARTICULAR PURPOSE. See the GNU Lesser General Public License for more
 * details.
 */

package com.liferay.ide.utils.library.listener.model;

import aQute.bnd.annotation.ProviderType;

import com.liferay.expando.kernel.model.ExpandoBridge;

import com.liferay.portal.kernel.bean.AutoEscape;
import com.liferay.portal.kernel.model.BaseModel;
import com.liferay.portal.kernel.model.CacheModel;
import com.liferay.portal.kernel.model.GroupedModel;
import com.liferay.portal.kernel.model.ShardedModel;
import com.liferay.portal.kernel.service.ServiceContext;

import java.io.Serializable;

import java.util.Date;

/**
 * The base model interface for the Library service. Represents a row in the &quot;liblistener_Library&quot; database table, with each column mapped to a property of this class.
 *
 * <p>
 * This interface and its corresponding implementation {@link com.liferay.ide.utils.library.listener.model.impl.LibraryModelImpl} exist only as a container for the default property accessors generated by ServiceBuilder. Helper methods and all application logic should be put in {@link com.liferay.ide.utils.library.listener.model.impl.LibraryImpl}.
 * </p>
 *
 * @author Brian Wing Shun Chan
 * @see Library
 * @see com.liferay.ide.utils.library.listener.model.impl.LibraryImpl
 * @see com.liferay.ide.utils.library.listener.model.impl.LibraryModelImpl
 * @generated
 */
@ProviderType
public interface LibraryModel extends BaseModel<Library>, GroupedModel,
	ShardedModel {
	/*
	 * NOTE FOR DEVELOPERS:
	 *
	 * Never modify or reference this interface directly. All methods that expect a library model instance should use the {@link Library} interface instead.
	 */

	/**
	 * Returns the primary key of this library.
	 *
	 * @return the primary key of this library
	 */
	public long getPrimaryKey();

	/**
	 * Sets the primary key of this library.
	 *
	 * @param primaryKey the primary key of this library
	 */
	public void setPrimaryKey(long primaryKey);

	/**
	 * Returns the library ID of this library.
	 *
	 * @return the library ID of this library
	 */
	public long getLibraryId();

	/**
	 * Sets the library ID of this library.
	 *
	 * @param libraryId the library ID of this library
	 */
	public void setLibraryId(long libraryId);

	/**
	 * Returns the group ID of this library.
	 *
	 * @return the group ID of this library
	 */
	@Override
	public long getGroupId();

	/**
	 * Sets the group ID of this library.
	 *
	 * @param groupId the group ID of this library
	 */
	@Override
	public void setGroupId(long groupId);

	/**
	 * Returns the company ID of this library.
	 *
	 * @return the company ID of this library
	 */
	@Override
	public long getCompanyId();

	/**
	 * Sets the company ID of this library.
	 *
	 * @param companyId the company ID of this library
	 */
	@Override
	public void setCompanyId(long companyId);

	/**
	 * Returns the user ID of this library.
	 *
	 * @return the user ID of this library
	 */
	@Override
	public long getUserId();

	/**
	 * Sets the user ID of this library.
	 *
	 * @param userId the user ID of this library
	 */
	@Override
	public void setUserId(long userId);

	/**
	 * Returns the user uuid of this library.
	 *
	 * @return the user uuid of this library
	 */
	@Override
	public String getUserUuid();

	/**
	 * Sets the user uuid of this library.
	 *
	 * @param userUuid the user uuid of this library
	 */
	@Override
	public void setUserUuid(String userUuid);

	/**
	 * Returns the user name of this library.
	 *
	 * @return the user name of this library
	 */
	@AutoEscape
	@Override
	public String getUserName();

	/**
	 * Sets the user name of this library.
	 *
	 * @param userName the user name of this library
	 */
	@Override
	public void setUserName(String userName);

	/**
	 * Returns the create date of this library.
	 *
	 * @return the create date of this library
	 */
	@Override
	public Date getCreateDate();

	/**
	 * Sets the create date of this library.
	 *
	 * @param createDate the create date of this library
	 */
	@Override
	public void setCreateDate(Date createDate);

	/**
	 * Returns the modified date of this library.
	 *
	 * @return the modified date of this library
	 */
	@Override
	public Date getModifiedDate();

	/**
	 * Sets the modified date of this library.
	 *
	 * @param modifiedDate the modified date of this library
	 */
	@Override
	public void setModifiedDate(Date modifiedDate);

	/**
	 * Returns the repository ID of this library.
	 *
	 * @return the repository ID of this library
	 */
	public long getRepositoryId();

	/**
	 * Sets the repository ID of this library.
	 *
	 * @param repositoryId the repository ID of this library
	 */
	public void setRepositoryId(long repositoryId);

	/**
	 * Returns the library group ID of this library.
	 *
	 * @return the library group ID of this library
	 */
	@AutoEscape
	public String getLibraryGroupId();

	/**
	 * Sets the library group ID of this library.
	 *
	 * @param libraryGroupId the library group ID of this library
	 */
	public void setLibraryGroupId(String libraryGroupId);

	/**
	 * Returns the library artifact ID of this library.
	 *
	 * @return the library artifact ID of this library
	 */
	@AutoEscape
	public String getLibraryArtifactId();

	/**
	 * Sets the library artifact ID of this library.
	 *
	 * @param libraryArtifactId the library artifact ID of this library
	 */
	public void setLibraryArtifactId(String libraryArtifactId);

	/**
	 * Returns the latest version of this library.
	 *
	 * @return the latest version of this library
	 */
	@AutoEscape
	public String getLatestVersion();

	/**
	 * Sets the latest version of this library.
	 *
	 * @param latestVersion the latest version of this library
	 */
	public void setLatestVersion(String latestVersion);

	/**
	 * Returns the last updated of this library.
	 *
	 * @return the last updated of this library
	 */
	@AutoEscape
	public String getLastUpdated();

	/**
	 * Sets the last updated of this library.
	 *
	 * @param lastUpdated the last updated of this library
	 */
	public void setLastUpdated(String lastUpdated);

	/**
	 * Returns the current version of this library.
	 *
	 * @return the current version of this library
	 */
	@AutoEscape
	public String getCurrentVersion();

	/**
	 * Sets the current version of this library.
	 *
	 * @param currentVersion the current version of this library
	 */
	public void setCurrentVersion(String currentVersion);

	/**
	 * Returns the enable listener of this library.
	 *
	 * @return the enable listener of this library
	 */
	public boolean getEnableListener();

	/**
	 * Returns <code>true</code> if this library is enable listener.
	 *
	 * @return <code>true</code> if this library is enable listener; <code>false</code> otherwise
	 */
	public boolean isEnableListener();

	/**
	 * Sets whether this library is enable listener.
	 *
	 * @param enableListener the enable listener of this library
	 */
	public void setEnableListener(boolean enableListener);

	@Override
	public boolean isNew();

	@Override
	public void setNew(boolean n);

	@Override
	public boolean isCachedModel();

	@Override
	public void setCachedModel(boolean cachedModel);

	@Override
	public boolean isEscapedModel();

	@Override
	public Serializable getPrimaryKeyObj();

	@Override
	public void setPrimaryKeyObj(Serializable primaryKeyObj);

	@Override
	public ExpandoBridge getExpandoBridge();

	@Override
	public void setExpandoBridgeAttributes(BaseModel<?> baseModel);

	@Override
	public void setExpandoBridgeAttributes(ExpandoBridge expandoBridge);

	@Override
	public void setExpandoBridgeAttributes(ServiceContext serviceContext);

	@Override
	public Object clone();

	@Override
	public int compareTo(Library library);

	@Override
	public int hashCode();

	@Override
	public CacheModel<Library> toCacheModel();

	@Override
	public Library toEscapedModel();

	@Override
	public Library toUnescapedModel();

	@Override
	public String toString();

	@Override
	public String toXmlString();
}